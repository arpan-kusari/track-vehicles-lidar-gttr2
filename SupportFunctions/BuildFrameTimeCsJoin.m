function [query] = BuildFrameTimeCsJoin(RunNum,CameraNum)
%   This function builds the big join needed to relate TimeCs to V51Frame.

query = (...
'SELECT CAST(ROUND(a.BaslerBlockId * b.M * 1000. + b.B - b.FirstGpsTimeMs, - 1)/10 AS int) AS TimeCs, a.BaslerBlockId, a.V51Frame ');
%'SELECT a.Vehicle, a.RunId, CAST(ROUND(a.BaslerBlockId * b.M * 1000. + b.B - b.FirstGpsTimeMs, - 1)/10 AS int) AS VideoTime, a.BaslerBlockId, a.V51Frame ');
query = [query ...
'FROM (SELECT a.Vehicle, a.RunId, a.TimeMs, b.BaslerBlockId, a.V51Frame '];
query = [query ...
            'FROM  dbo.V51Frames AS a '];
query = [query ...
                'INNER JOIN '];
query = [query ...
            'dbo.IndexBasler' num2str(CameraNum) 'Out_Corrected AS b '];
query = [query ...
            'ON a.Vehicle = b.Vehicle AND a.RunId = b.RunId AND a.TimeMs = b.TimeMs where '];
query = [query ...
                'a.Camera = ' num2str(CameraNum) ' and a.RunId = ' num2str(RunNum)];
query = [query ...
                ') AS a '];
query = [query ...
        'LEFT OUTER JOIN '];
query = [query ...
    'dbo.Basler' num2str(CameraNum) 'RegressPts AS b '];
query = [query ...
    'ON a.Vehicle = b.Vehicle AND a.RunId = b.RunId '];
query = [query ...
'WHERE (b.M IS NOT NULL) AND (CAST(ROUND(a.BaslerBlockId * b.M * 1000. + b.B - b.FirstGpsTimeMs, - 1) / 10 AS int) >= - 100) '];
query = [query ...
'ORDER BY TimeCs'];
%'ORDER BY a.Vehicle, a.RunId, VideoTime'];


end

